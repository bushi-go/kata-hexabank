---
- name: Get VMS Ips for {{ target_env }} cluster
  hosts: vm_hosts
  vars:
    vms: "{{groups['cluster_vm']}}"
  tasks:
    - name: Get ips from multipass info
      ansible.utils.cli_parse:
        command: "multipass info  --format json {{ item }}"
        parser:
          name: ansible.utils.json
      register: int
      with_items: "{{groups['cluster_vm'] | intersect(hosted_vms)}}"
    - name: update /etc/host
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "{{ item.parsed.info[item.item].ipv4[0] }} {{item.item}}"
      become: yes
      delegate_to: localhost
      with_items: "{{ int.results }}"

- name: reset all node
  hosts: cluster_vm
  tasks:
    - name: Reset all kube node
      shell: |
        kubeadm reset --force
      register: reset_cluster

- name: create token for kubeadm registration
  when: reset_cluster is succeeded
  hosts: master1-{{target_env}}
  tasks:
    - name: create token and register it
      shell: |
        kubeadm token create
      register: K8S_TOKEN
    - name: registering fact for k8s join token
      set_fact: k8s_join_token={{K8S_TOKEN.stdout}}

- name: init masters
  hosts: masters
  tasks:
    - name: init
      shell: |
        kubeadm init ---service-cidr {{ service_cidr }} \
                 --kubernetes-version {{ kube_version }} \
                 --pod-network-cidr {{ pod_network_cidr }} \
                 --token {{ token }} \
                 --apiserver-advertise-address {{ master_ip }} \
                 --cri-socket=/var/run/{{ container_runtime }}/{{ container_runtime }}.sock \
                 {{ kubeadm_opts }} \
                 {{ init_opts }}
- name: other master joining cluster
  hosts: masters:!master1-{{target_env}}
  tasks:
    - name: join cluster
      shell: |
        kubeadm join

#- name: Create VMs for {{ target_env }} cluster
#  hosts: vm_hosts
#  tasks:
#    - name: Provision VMS through multipass
#      vars:
#        vms: "{{groups['vm_hosts']}}"
#      include_role:
#        name: mutlipass-provision-vm
#  tags:
#    - multipass
#    - provision